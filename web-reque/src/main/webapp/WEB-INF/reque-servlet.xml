<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:annotation-driven ignore-default-model-on-redirect="true"/>
    <context:annotation-config/>
    <context:component-scan base-package="ru.rsmu.reque.actions"/>
    <context:component-scan base-package="ru.rsmu.reque.service"/>
    <context:component-scan base-package="ru.rsmu.reque.validators"/>
    <context:component-scan base-package="ru.rsmu.reque.job"/>

    <context:property-placeholder location="classpath:regue.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />


    <!-- the interseptor to keep the session open to avoid lazy initialization problems -->
    <bean name="openSessionInViewInterceptor" class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <mvc:interceptors>
        <ref bean="openSessionInViewInterceptor"/>
        <ref bean="localeChangeInterceptor"/>
    </mvc:interceptors>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="ru"/>
    </bean>
    <bean id="localeChangeInterceptor"
          class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </bean>

    <mvc:view-resolvers>
        <mvc:jsp prefix="/WEB-INF/pages" suffix=".jsp" view-class="org.springframework.web.servlet.view.JstlView"/>
    </mvc:view-resolvers>

    <mvc:resources mapping="/resources/**" location="/resources/" cache-period="31556926"/>

    <!-- annotation-based handler -->
    <bean id="annotationMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="order" value="1"/>
        <property name="alwaysUseFullPath" value="true"/>
        <property name="interceptors">
            <list>
                <ref bean="openSessionInViewInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>


    <!-- Annotation driven validator factory. Default implementation of JSR-303
        bean validation API -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource" />
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                input.encoding=UTF-8
                output.encoding=UTF-8
            </value>
        </property>
    </bean>


    <bean id="sendReminder" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="sendEmailRemind"/>
        <property name="targetMethod" value="sendReminders"/>
    </bean>

    <bean id="sendReminderTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="sendReminder"/>
        <!-- run every day at 10am -->
        <property name="cronExpression" value="0 0 10 * * ?" />
    </bean>

    <bean id="smsReminder" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="sendSmsRemind"/>
        <property name="targetMethod" value="sendReminders"/>
    </bean>

    <bean id="sendSmsReminderTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="smsReminder"/>
        <!-- run every day at 11am -->
        <property name="cronExpression" value="0 0 11 * * ?" />

        <!-- debug purpose only-->
        <!--<property name="cronExpression" value="0 0/5 * * * ?" />-->
    </bean>

    <bean id="smsReminderPrepare" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="sendSmsRemind"/>
        <property name="targetMethod" value="clearSentQueue"/>
    </bean>

    <bean id="sendSmsReminderPrepareTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="smsReminderPrepare"/>
        <!-- run every day at 9am -->
        <property name="cronExpression" value="0 0 9 * * ?" />
    </bean>

    <!-- send sms from queue (stored in the db-->
    <bean id="smsForQueue" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="sendSmsFromQueue"/>
        <property name="targetMethod" value="sendReminders"/>
    </bean>

    <bean id="smsForQueueTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="smsReminderPrepare"/>
        <!-- run every minute -->
        <property name="cronExpression" value="0 0/1 * * * ?" />
    </bean>

    <bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!--<property name="jobDetails">
            <list>
                <ref bean="sendReminder"/>
                <ref bean="smsReminder"/>
            </list>
        </property>-->
        <property name="triggers">
            <list>
                <ref bean="sendReminderTrigger"/>
                <ref bean="sendSmsReminderTrigger"/>
                <ref bean="sendSmsReminderPrepareTrigger"/>
                <ref bean="smsForQueueTrigger"/>
            </list>
        </property>
    </bean>
</beans>